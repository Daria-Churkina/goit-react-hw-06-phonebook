{"version":3,"sources":["Redux/contacts/contacts-selectors.jsx","Redux/contacts/contacts-actions.jsx","Redux/contacts/contacts-types.jsx","Components/ContactsList.jsx","Components/FilterInput.jsx","Components/PhoneBook.jsx","Components/Section.jsx","App.js","Redux/contacts/contacts-reducer.jsx","Redux/store.jsx","index.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getShownContacts","normalizedFilter","toLowerCase","name","includes","newContact","createAction","number","payload","id","uuidv4","deleteContact","filterContact","ContactsList","dispatch","useDispatch","contactsToShow","useSelector","length","className","map","type","onClick","FilterInput","value","onChange","e","target","PhoneBook","useState","setName","setNumber","handleChange","resetState","onSubmit","preventDefault","placeholder","pattern","title","Section","children","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.40e3f736.chunk.js","sourcesContent":["export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getShownContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { NEW_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './contacts-types';\r\n\r\nexport const newContact = createAction(NEW_CONTACT, (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(DELETE_CONTACT);\r\nexport const filterContact = createAction(FILTER_CONTACT);\r\n","export const NEW_CONTACT = 'contacts/new';\r\nexport const DELETE_CONTACT = 'contacts/delete';\r\nexport const FILTER_CONTACT = 'contacts/filter';\r\n","import React from 'react';\nimport {\n  getShownContacts,\n  getContacts,\n} from '../Redux/contacts/contacts-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../Redux/contacts/contacts-actions';\n\nfunction ContactsList() {\n  const dispatch = useDispatch();\n  const contactsToShow = useSelector(getShownContacts);\n  const contacts = useSelector(getContacts);\n\n  if (contacts.length) {\n    return (\n      <ul className=\"contactList\">\n        {contactsToShow.map(({ id, name, number }) => (\n          <li className=\"contactItem\" key={id}>\n            <p>\n              {name} : {number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              className=\"deleteContactButton\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  } else {\n    return <h3>Add new contacts</h3>;\n  }\n}\n\nexport default ContactsList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../Redux/contacts/contacts-actions';\nimport { getFilter, getContacts } from '../Redux/contacts/contacts-selectors';\n\nfunction FilterInput() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const filterInput = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={filter} name=\"filter\" onChange={filterInput} />\n    </label>\n  );\n}\n\nexport default FilterInput;\n","import { useState } from 'react';\nimport { newContact } from '../Redux/contacts/contacts-actions';\nimport { useDispatch } from 'react-redux';\n\nfunction PhoneBook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    dispatch(newContact(name, number));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={submitForm}>\n      <label className=\"label name\">\n        Enter name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          placeholder=\"Jony Depp\"\n        />\n      </label>\n      <label className=\"label number\">\n        Ð•nter number\n        <input\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          onChange={handleChange}\n          placeholder=\"Number (7 to 9 digits)\"\n          pattern=\"[0-9]{7,9}\"\n          title=\"7 to 9 digits allowed\"\n        />\n      </label>\n      <button type=\"submit\" className=\"addContact\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default PhoneBook;\n","import React from 'react';\n\nconst Section = ({ title, children }) => (\n  <section className=\"section\">\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import ContactsList from './Components/ContactsList';\nimport FilterInput from './Components/FilterInput';\nimport PhoneBook from './Components/PhoneBook';\nimport Section from './Components/Section';\nimport './Components/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"main-container\">\n      <Section title=\"Phonebook\">\n        <PhoneBook />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterInput />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  newContact,\r\n  deleteContact,\r\n  filterContact,\r\n} from '../contacts/contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [newContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}